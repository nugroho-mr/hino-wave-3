---
layout: 'layouts/authenticated'
title: 'Dealer'
order: 500
status: 'completed'
body_classes: 'auth dealer'
topbar: true
include_autocomplete: true
---

<section id="section__dealer-search-form" class="py-4">
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-4">
                <div class="card search-box dealer--search-box mb-2">
                    <div class="card-body py-0">
                        <div class="d-flex align-items-center">
                            <div class="col p-0">
                                <input type="text" class="search-box" placeholder="Search" >
                            </div>
                            <div class="col-auto p-0">
                                <box-icon name="search" size="24px" color="#444444" class="d-block"></box-icon>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4">
                <div class="form-group mb-2">
                    <select class="form-control select-control">
                        <option value="">-- Dealer Service --</option>
                        {{#each dealerList.dealer_services }}
                            <option value="{{ title }}">{{ title }}</option>
                        {{/each}}
                    </select>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-md-4">
                <div class="form-group mb-0">
                    <input type="text" id="select-cities" class="form-control select-control" />
                    <!--select class="form-control select-control" id="select-cities">
                        <option value="">-- Kota --</option>
                        {{#each dealerList.dealer_cities }}
                            <option value="{{ title }}">{{ title }}</option>
                        {{/each}}
                    </select-->
                </div>
            </div>
        </div>
    </div>
</section>

<div id="map" style="height: 400px; width: 100%;"></div>

<section id="section__dealer-list" class="py-8">
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="grid-container grid--dealer-list">
                    {{#each dealerList.dealers}}
                        <div class="grid-item text-dark">
                            <h6>{{name}}</h6>
                            <ul class="bx-ul m-0 pl-4">
                                <li><i class="bx bx-buildings"></i>{{ address }}</li>
                                <li><i class="bx bx-phone"></i>{{ phone }}</li>
                                <li><i class="bx bx-printer"></i>{{ fax }}</li>
                            </ul>
                        </div>
                    {{/each}}
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    document.addEventListener( 'DOMContentLoaded', function () {
        let dealers = [
            {{#each dealerList.dealers}}
                {{# if latitude}}
                    {
                        name: '{{name}}',
                        lat: {{latitude}},
                        long: {{longitude}},
                        address: '{{address}}',
                        city: '{{city}}',
                        phone: '{{phone}}',
                        fax: '{{fax}}',
                        service: '{{service}}'
                    },
                {{/if}}
            {{/each}}
        ]

        const map = new google.maps.Map(document.getElementById("map"), {
          center: { lat: -6.242543, lng: 106.863696 },
          zoom: 16,
          restriction: {
            latLngBounds: {                
                north: 7.332038,
                south: -12.895531,
                east: 142.337897,
                west: 92.036709
            },
          },
        });
        

        const infoWindowContent = (marker) => {
            let str = '<div class="marker-info-container bg-hino-red rounded">'
            str += '<img src="/assets/images/logo-heart-horizontal.svg" class="logo-heart-horizontal">'
            str += '<div class="marker-info bg-white rounded">'
            str += '<h6>' + marker.name + '</h6>'
            str += '<ul class="bx-ul font-weight-bold">'
            str += '<li><i class="bx bx-buildings"></i>' + marker.address + '</li>'
            str += '<li><i class="bx bx-phone"></i>' + marker.phone + '</li>'
            str += '<li><i class="bx bx-printer"></i>' + marker.fax + '</li>'
            str += '</ul>'
            str += '</div>'
            str += '</div>'

            return str
        } 

        let infowindow = new google.maps.InfoWindow();

        let markers = dealers.map((dealer, i) => {
            let marker = new google.maps.Marker({
                map,
                animation: google.maps.Animation.DROP,
                position: { lat: dealer.lat, lng: dealer.long },
                name: dealer.name,
                address: dealer.address,
                city: dealer.city,
                phone: dealer.phone,
                fax: dealer.fax,
                service: dealer.service,
                icon: '/assets/images/ic-map-marker.svg'
            })
            google.maps.event.addListener(marker, 'click', () => { 
                infowindow.setContent(infoWindowContent(marker))
                infowindow.open(map, marker);
            });
            return marker
        });

        const autoCompleteCities = new autoComplete({
            data: {
                src: [
                    {{#each dealerList.dealer_cities }}
                        "{{ title }}",
                    {{/each}}
                ],
                cache: true,
            },
            placeHolder: '-- City --',
            selector: '#select-cities',
            searchEngine: 'loose',
            noResults: (dataFeedback, generateList) => {
                // Generate autoComplete List
                generateList(autoCompleteCities, dataFeedback, dataFeedback.results);
                // No Results List Item
                const result = document.createElement("li");
                result.setAttribute("class", "no_result py-3 px-3");
                result.setAttribute("tabindex", "1");
                result.innerHTML = `<h5 class="text-gray-400 font-weight-normal">Found No Results</h5>`;
                document
                    .querySelector(`#${autoCompleteCities.resultsList.idName}`)
                    .appendChild(result);
            },
            onSelection: (feedback) => {
                document.querySelector("#select-cities").blur();
                document.querySelector("#select-cities").value = feedback.selection.value;
                console.log(feedback);
            }
        });
    })
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDhXWNjkdtTh71x6PDiDbKfHPVXHawElK8">
</script>
