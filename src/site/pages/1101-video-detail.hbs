---
layout: 'layouts/authenticated'
title: 'Video Detail'
order: 1100
status: 'completed'
body_classes: 'auth video-detail'
topbar: true
include_splide: true
topbar_title: 'Video'
video_id: 'YwyG_y7lI38'
video_kategori_id: [
    'PLFLUoscduVNi5YfkpfJWpQvfAFvf58NrC',
    'PLa33Dq6YNtLiydMiGtmQIA584g6mDRzbm'
]
---

<section id="section__video-player" class="bg-black">
    <div class="container">
        <div class="row">
            <div class="col col--video-player">
                <div class="video-player"></div>
            </div>
        </div>
    </div>
</section>

<section id="section__video-share" class="py-4">
    <div class="container">
        <div class="row justify-content-end">
            <div class="col-auto">
                <a class="btn btn-hino-red btn-sm text-white py-2"><i class="bx bx-share-alt"></i>&nbsp;&nbsp;Bagikan Video</a>
            </div>
        </div>
    </div>
</section>

<section id="section__video-list" class="text-dark">
    <div class="container">
        <div class="row justify-content-between align-items-center mb-6">
            <div class="col-auto">
                <h5 class="font-weight-normal mb-0">Kategori Video</h5>
            </div>
            <div class="col-auto">
                <select class="form-control" id='select--video-category'>
                    <option value="PLFLUoscduVNi5YfkpfJWpQvfAFvf58NrC">Sample 1</option>
                    <option value="PLa33Dq6YNtLiydMiGtmQIA584g6mDRzbm">Sample 2</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="grid-container grid-container--video-category">

                </div>
            </div>
        </div>
    </div>
</section>

<script>

    const getVideoDetails = async (videoId, done) => {
        let requestVideo = new XMLHttpRequest()
        requestVideo.onload = function () {
            done(null, requestVideo.response);
        };
        requestVideo.onerror = function () {
            done(requestVideo.response);
        };
        //console.log(videoId)
        requestVideo.open('GET', 'https://youtube.googleapis.com/youtube/v3/videos?part=snippet&part=statistics&id=' + videoId.join('&id=') + '&key={{ googleAPI.APIkey  }}', true);
        requestVideo.send('');

    }
    
    const populateFeaturedVideo = (featuredVideos) => {
        
        let videoIds = (featuredVideos.items.map(item => item.contentDetails.videoId))

        getVideoDetails(videoIds, (err,resp) => {
            if (err) { throw err; }
            let htmlStr = ''
            const videoList = JSON.parse(resp)
            console.log(videoList)
            videoList.items.forEach((video) => {
                snippet = video.snippet
                stats = video.statistics
                htmlStr += '<li class="splide__slide px-3">'
                htmlStr += '<div class="card" data-video-id="' + video.id + '"><div class="card-body p-0">'
                htmlStr += '<div class="thumbnail w-100 rounded-top" style="background-image: url(' + snippet.thumbnails.high.url + ');" ></div>'
                htmlStr += '<div class="p-4">'
                htmlStr += '<h5 class="title font-weight-normal">' + snippet.title + '</h5>'
                htmlStr += '<p class="description m-0">' + stats.viewCount + ' views</p>'
                htmlStr += '</div>'
                htmlStr += '</div></div>'
                htmlStr += '</li>'
            })
            document.querySelector('.splide--featured-video .splide__list').innerHTML += htmlStr
            let splideFeaturedVideo = new Splide( '.splide--featured-video', {
                //type: 'loop',
                //waitForTransition: true,
                //autoWidth: true,
                focus: 'center',
                arrows: false,
                navigation: false,
                autoplay: false,
                keyboard: false,
                cover: false,
                perMove: 1,
                padding: {
                    left: '0.75rem',
                    right: 50
                },
                pagination: false,
            }).mount()
        })
    }

    const reloadVideoList = () => {
        const curPlaylistId = document.getElementById('select--video-category').value

        let requestCategoryVideo = new XMLHttpRequest()
        
        requestCategoryVideo.onreadystatechange = function() {
            if(requestCategoryVideo.readyState < 4) {
                return;
            }
            if(requestCategoryVideo.status !== 200) {
                return;
            }
            if(requestCategoryVideo.readyState === 4) {

                const videos = JSON.parse(requestCategoryVideo.responseText)
        
                let videoIds = (videos.items.map(item => item.contentDetails.videoId))

                getVideoDetails(videoIds, (err,resp) => {
                    if (err) { throw err; }
                    let htmlStr = ''
                    const videoList = JSON.parse(resp)
                    console.log(videoList)
                    videoList.items.forEach((video) => {
                        snippet = video.snippet
                        stats = video.statistics
                        htmlStr += '<div class="video-category__item mb-6" data-video-id="' + video.id + '"><div class="d-flex">'
                        htmlStr += '<div class=" mr-4 col-5 px-0"><div class="thumbnail" style="background-image: url(' + snippet.thumbnails.high.url + ');" ></div></div>'
                        htmlStr += '<div class="col px-0">'
                        htmlStr += '<h5 class="title font-weight-normal">' + snippet.title + '</h5>'
                        htmlStr += '<p class="description m-0">' + stats.viewCount + ' views</p>'
                        htmlStr += '</div>'
                        htmlStr += '</div></div>'
                    })
                    document.querySelector('.grid-container--video-category').innerHTML = htmlStr
                })
            }
        };

        requestCategoryVideo.open('GET', 'https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails&playlistId=' + curPlaylistId + '&key={{ googleAPI.APIkey  }}', true);
        requestCategoryVideo.send('');
    }

    document.addEventListener( 'DOMContentLoaded', function () {

        let requestPlayedVideo = new XMLHttpRequest()
        
        requestPlayedVideo.onreadystatechange = function() {
            if(requestPlayedVideo.readyState < 4) {
                return;
            }
            if(requestPlayedVideo.status !== 200) {
                return;
            }
            if(requestPlayedVideo.readyState === 4) {
                playedVideo = JSON.parse(requestPlayedVideo.responseText);
                console.log(playedVideo)
                document.querySelector('#section__video-player .video-player').innerHTML = playedVideo.items[0].player.embedHtml
            }
        };
        requestPlayedVideo.open('GET', 'https://youtube.googleapis.com/youtube/v3/videos?part=player&id={{ video_id }}&key={{ googleAPI.APIkey  }}', true);
        requestPlayedVideo.send('');

        reloadVideoList();

    })

    document.getElementById('select--video-category').addEventListener('change',reloadVideoList)
</script>

